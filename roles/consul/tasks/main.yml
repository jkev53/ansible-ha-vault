---

- name: Include etc host settings
  import_tasks: etc_hosts.yml

- name: Include bashrc settings
  import_tasks: bashrc.yml

- name: Read bootstrapped state
  stat:
    path: "{{ consul_bootstrap_state }}"
  register: bootstrap_state
  ignore_errors: true
  tags: always

- name: Include user and group settings
  import_tasks: user_group.yml
  
- name: Include directory settings
  import_tasks: dirs.yml

- name: Copy TLS files
  import_tasks: tls.yml


- name: Check for existing Consul binary
  stat:
    path: "{{ consul_binary }}"
  register: consul_binary_installed

- name: Calculate whether to install consul binary
  set_fact:
    consul_install_binary: "{{ consul_install_upgrade or not consul_binary_installed.stat.exists }}"

- name: Install OS packages and consul - locally
  include_tasks: install.yml
  when:
    - consul_install_binary | bool


- block:
    - name: Check for gossip encryption key on previously boostrapped server
      slurp:
        src: "{{ consul_config_path }}/config.json"
      register: consul_config_b64
      ignore_errors: yes

    - name: Deserialize existing configuration
      set_fact:
        consul_config: "{{ consul_config_b64.content | b64decode | from_json }}"
      when: consul_config_b64.content is defined

    - name: Save gossip encryption key from existing configuration
      set_fact:
        consul_raw_key: "{{ consul_config.encrypt }}"
      when: consul_config is defined

  no_log: true
  when:
    - consul_raw_key is not defined
    - bootstrap_state.stat.exists | bool
    - inventory_hostname in consul_servers

# Key provided by extra vars or the above block
- name: Write gossip encryption key locally for use with new servers
  copy:
    content: "{{ consul_raw_key }}"
    dest: '/tmp/consul_raw.key'
  become: no
  no_log: true
  run_once: true
  register: consul_local_key
  delegate_to: localhost
  changed_when: false
  when: consul_raw_key is defined

# Generate new key if none was found
- block:
    - name: Generate gossip encryption key
      shell: "PATH={{ consul_bin_path }}:$PATH consul keygen"
      register: consul_keygen

    - name: Write key locally to share with other nodes
      copy:
        content: "{{ consul_keygen.stdout }}"
        dest: '/tmp/consul_raw.key'
      become: no
      delegate_to: localhost

  no_log: true
  run_once: true
  when:
    - not consul_local_key.changed
    - not bootstrap_state.stat.exists | bool

- name: Read gossip encryption key for servers that require it
  set_fact:
    consul_raw_key: "{{ lookup('file', '/tmp/consul_raw.key') }}"
  no_log: true
  when:
    - consul_raw_key is not defined

- name: Delete gossip encryption key file
  file:
    path: '/tmp/consul_raw.key'
    state: absent
  become: no
  run_once: true
  delegate_to: localhost
  changed_when: false

- name: Create Consul configuration
  import_tasks: config.yml

- name: Create systemd script
  template:
    src: consul_systemd.service.j2
    dest: /home/vagrant/consul.service

- name: Create systemd script
  template:
    src: consul_systemd.service.j2
    dest: /lib/systemd/system/consul.service
    owner: root
    group: root
    mode: 0644
  register: systemd_unit
  # notify: restart consul
